{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Aqua Track",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Application for managing contacts"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8081"
    },
    {
      "url": "https://aqua-track-back.up.railway.app"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Operations with Users"
    },
    {
      "name": "Auth",
      "description": "Auth operations"
    }
  ],
  "paths": {
    "/users/{userId}": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user by id",
        "operationId": "updateUser",
        "description": "Update user by Id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67333b7e721cbb7aed8baba5"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "weight": {
                    "description": "User's weight in kilograms.",
                    "type": "number",
                    "example": 52
                  },
                  "activeTime": {
                    "description": "The number of minutes the user has been active today.",
                    "type": "number",
                    "example": 12
                  },
                  "dailyNorm": {
                    "description": "The user's daily water intake goal in milliliters.",
                    "type": "number",
                    "example": 500
                  },
                  "gender": {
                    "description": "Specifies the gender of the user. Acceptable values are 'Woman' or 'Man'.",
                    "type": "string",
                    "enum": [
                      "Woman",
                      "Man"
                    ]
                  },
                  "avatarUrl": {
                    "description": "User's photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a contact"
                    },
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get data about the current user",
        "operationId": "getCurrentUser",
        "description": "Retrieve information about the currently authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved current user data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "required": [
                            "_id",
                            "name",
                            "email",
                            "avatarUrl",
                            "gender",
                            "weight",
                            "activeTime",
                            "dailyNorm",
                            "createdAt",
                            "updatedAt"
                          ],
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "674346608217f8bb0c28a097"
                            },
                            "name": {
                              "type": "string",
                              "example": "Лексі Rosa"
                            },
                            "email": {
                              "type": "string",
                              "example": "alex@gmail.com"
                            },
                            "avatarUrl": {
                              "type": "string",
                              "example": "https://res.cloudinary.com/dzon9bagg/image/upload/v1732558201/z2coslezrkdw3bpz9mqb.jpg"
                            },
                            "gender": {
                              "type": "string",
                              "example": "Woman"
                            },
                            "weight": {
                              "type": "number",
                              "example": 100
                            },
                            "activeTime": {
                              "type": "number",
                              "example": 60
                            },
                            "dailyNorm": {
                              "type": "number",
                              "example": 1500
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-11-24T15:29:36.066Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-11-25T20:12:55.256Z"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Create new user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "mail@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "d3%6J-!w"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Register user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "mail@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "d3%6J-!w"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logged in user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "XYbKR1jaTV4DneM5uRgxXzWSgwPFjK4ldSWNd2bv"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404u"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout",
        "operationId": "logoutUser",
        "description": "Endpoint to log out a user by clearing their session and cookies.",
        "security": [],
        "parameters": [
          {
            "in": "cookie",
            "name": "sessionId",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The session ID stored in the user's cookies.",
            "example": "645a8d0f4b5c2c0012c56e7b"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully logged out. No content returned.",
            "headers": {
              "Set-Cookie": {
                "description": "Clears the cookies for sessionId and refreshToken.",
                "schema": {
                  "type": "string",
                  "example": "refreshToken=; Path=/; HttpOnly; Expires=Thu, 01 Jan 1970 00:00:00 GMT"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh Tokens",
        "operationId": "refreshToken",
        "description": "Endpoint to refresh the access and refresh tokens using the current refresh token.",
        "security": [],
        "parameters": [
          {
            "in": "cookie",
            "name": "sessionId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The session ID stored in the user's cookies.",
            "example": "645a8d0f4b5c2c0012c56e7b"
          },
          {
            "in": "cookie",
            "name": "refreshToken",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The refresh token stored in the user's cookies.",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed a session!",
            "headers": {
              "Set-Cookie": {
                "description": "Cookies with updated refreshToken and sessionId.",
                "schema": {
                  "type": "string",
                  "example": "refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9; Path=/; HttpOnly"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "HTTP status code of the response.",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "description": "Success message.",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "The new access token for the user.",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/user-count": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get total number of registered users",
        "operationId": "getUserCount",
        "description": "Fetch the total number of registered users in the application.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Total users count fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "totalUsers"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Total users count fetched successfully"
                    },
                    "totalUsers": {
                      "type": "integer",
                      "example": 123
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/get-oauth": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get Google OAuth URL",
        "operationId": "getOauthUrl",
        "description": "This endpoint retrieves the Google OAuth URL, which the frontend can use to redirect the user to the Google login page.\nThe user will authenticate, and upon successful login, Google will redirect the user back to the provided `redirect_uri` with an authorization code.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched Google OAuth URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get Google OAuth URL"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "url"
                      ],
                      "properties": {
                        "url": {
                          "type": "string",
                          "example": "https://accounts.google.com/o/oauth2/v2/auth?scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile&response_type=code&client_id=695190086380-0rksa3tr6t9h5bq950ab9h62p6v52g5v.apps.googleusercontent.com&redirect_uri=http%3A%2F%2Flocalhost%3A8081%2Fconfirm-oauth"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/confirm-oauth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login/Register user with Google",
        "operationId": "confirmOauth",
        "description": "User logs in or registers with Google OAuth code. Upon success, an access token is returned.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "description": "Google OAuth authorization code",
                    "type": "string",
                    "example": "4/0AeanS0ZS_DiPq6VArdcVBxLjmSt3CmYz35JY8bzeHMeUvNOGhnDpu0LIP7zBgKKFVsPMKw"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in or registered via Google OAuth",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Login with Google successfully!"
                    },
                    "data": {
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "6ulErnx7og0KG93ok2f4hWkt898Dt6mhjILAHLiJ"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/waters/{id}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Update a water record",
        "operationId": "updateWaterRecord",
        "description": "Update an existing water record using JSON or multipart form data.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the water record to update",
            "schema": {
              "type": "string",
              "example": "67422422135f1e6a56bf23fe"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "integer",
                    "example": 150,
                    "description": "The amount of water consumed in liters"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "example": "2024-11-23T19:00:00",
                    "description": "The date of water consumption"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water consumption record updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/water"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "\"amount\" must be a positive number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Water consumption record not found",
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete water record by ID",
        "operationId": "deleteWaterRecord",
        "description": "Delete a water record by its unique ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67422422135f1e6a56bf23fe",
              "description": "The unique ID of the water record"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted the water record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Water record not found",
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/waters": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Create a new water record",
        "operationId": "createWaterRecord",
        "description": "Creates a water record using JSON or multipart form data.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "integer",
                    "example": 150,
                    "description": "The amount of water consumed in liters"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "example": "2024-11-23T19:00:00",
                    "description": "The date of water consumption"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Water consumption record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/water"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "\"amount\" must be a positive number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/waters/byDay": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Returns a list of water records",
        "operationId": "getWaterRecordsByDay",
        "description": "Returns a list of water records by day",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "day",
            "required": true,
            "description": "Date",
            "schema": {
              "type": "string",
              "example": "2024-11-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "total": {
                      "type": "integer",
                      "example": 131
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/water"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "\"amount\" must be a positive number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Water consumption record not found",
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/waters/byMonth": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Returns a list of water records by selected interval",
        "operationId": "getWaterRecordsByMonth",
        "description": "Returns a list of water records by day",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "required": true,
            "description": "Date",
            "schema": {
              "type": "string",
              "example": "2024-11-24"
            }
          },
          {
            "in": "query",
            "name": "to",
            "required": true,
            "description": "Date",
            "schema": {
              "type": "string",
              "example": "2024-11-27"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "total": {
                      "type": "integer",
                      "example": 131
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/water"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "\"amount\" must be a positive number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Water consumption record not found",
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "User's ID (auto-generated by the database)",
            "type": "string",
            "example": "671b3a69a4f2775d477049fc"
          },
          "name": {
            "description": "User's name (optional, default is an empty string)",
            "type": "string",
            "example": "John Doe",
            "default": ""
          },
          "email": {
            "description": "User's email (required, must be unique)",
            "type": "string",
            "example": "mail@example.com"
          },
          "avatarUrl": {
            "description": "URL of the user's avatar (optional, default is null)",
            "type": "string",
            "example": "https://res.cloudinary.com/deoxrcsvx/image/upload/v1729857245/image.png",
            "default": null
          },
          "gender": {
            "description": "User's gender (optional, default is 'Woman')",
            "type": "string",
            "enum": [
              "Woman",
              "Man"
            ],
            "example": "Woman",
            "default": "Woman"
          },
          "weight": {
            "description": "User's weight in kg (optional, default is 0)",
            "type": "number",
            "example": 75,
            "default": 0
          },
          "activeTime": {
            "description": "User's active time in minutes per day (optional, default is 0)",
            "type": "number",
            "example": 60,
            "default": null
          },
          "dailyNorm": {
            "description": "User's daily water consumption norm in ml (optional, default is 1500)",
            "type": "number",
            "example": 1500,
            "default": 1500
          },
          "createdAt": {
            "description": "DB-generated on register",
            "type": "string",
            "example": "2024-10-25T06:27:53.173Z"
          },
          "updatedAt": {
            "description": "DB-generated on update",
            "type": "string",
            "example": "2024-10-25T11:54:04.888Z"
          }
        }
      },
      "water": {
        "type": "object",
        "required": [
          "_id",
          "amount",
          "userId",
          "curDailyDose",
          "date"
        ],
        "properties": {
          "id": {
            "description": "Water entry's id",
            "type": "string",
            "example": "67422422135f1e6a56bf23fe"
          },
          "amount": {
            "description": "Amount of water consumed (in milliliters)",
            "type": "number",
            "example": 500
          },
          "curDailyDose": {
            "description": "Current daily water consumption goal (in milliliters)",
            "type": "number",
            "example": 2000
          },
          "date": {
            "description": "Date of water consumption entry",
            "type": "string",
            "format": "date-time",
            "example": "2024-11-23T12:34:56Z"
          },
          "createdAt": {
            "description": "Timestamp when the entry was created",
            "type": "string",
            "format": "date-time",
            "example": "2024-11-23T12:34:56Z"
          },
          "updatedAt": {
            "description": "Timestamp when the entry was last updated",
            "type": "string",
            "format": "date-time",
            "example": "2024-11-23T12:34:56Z"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Http Error"
                },
                "data": {
                  "type": "object",
                  "example": {
                    "error": "Request body validation error"
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Http Error"
                },
                "data": {
                  "type": "object",
                  "example": {
                    "error": "Unauthorized"
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Http Error"
                },
                "data": {
                  "type": "object",
                  "example": {
                    "error": "Not found"
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "User with used email already exist",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong"
                },
                "data": {
                  "type": "object",
                  "example": {
                    "error": "Internal server error"
                  }
                }
              }
            }
          }
        }
      },
      "404u": {
        "description": "User not found error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}