{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Aqua Track",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Application for managing contacts"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8081"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Operations with Users"
    },
    {
      "name": "Auth",
      "description": "Auth operations"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Create new user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "mail@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "d3%6J-!w"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Register user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "mail@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "d3%6J-!w"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logged in user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "XYbKR1jaTV4DneM5uRgxXzWSgwPFjK4ldSWNd2bv"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404u"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "User's ID (auto-generated by the database)",
            "type": "string",
            "example": "671b3a69a4f2775d477049fc"
          },
          "name": {
            "description": "User's name (optional, default is an empty string)",
            "type": "string",
            "example": "Johnny Doeh",
            "default": ""
          },
          "email": {
            "description": "User's email (required, must be unique)",
            "type": "string",
            "example": "mail@example.com"
          },
          "password": {
            "description": "User's password (required)",
            "type": "string",
            "example": "securePassword123"
          },
          "avatarUrl": {
            "description": "URL of the user's avatar (optional, default is null)",
            "type": "string",
            "example": "https://res.cloudinary.com/deoxrcsvx/image/upload/v1729857245/image.png",
            "default": null
          },
          "gender": {
            "description": "User's gender (optional, default is 'Woman')",
            "type": "string",
            "enum": [
              "Woman",
              "Man"
            ],
            "example": "Woman",
            "default": "Woman"
          },
          "weight": {
            "description": "User's weight in kg (optional, default is 0)",
            "type": "number",
            "example": 75,
            "default": 0
          },
          "activeTime": {
            "description": "User's active time in minutes per day (optional, default is 0)",
            "type": "number",
            "example": 60,
            "default": null
          },
          "dailyNorm": {
            "description": "User's daily water consumption norm in ml (optional, default is 1500)",
            "type": "number",
            "example": 1500,
            "default": 1500
          },
          "createdAt": {
            "description": "DB-generated on register",
            "type": "string",
            "example": "2024-10-25T06:27:53.173Z"
          },
          "updatedAt": {
            "description": "DB-generated on update",
            "type": "string",
            "example": "2024-10-25T11:54:04.888Z"
          }
        }
      }
    },
    "responses": {
      "409": {
        "description": "User with used email already exist",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404u": {
        "description": "User not found error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}